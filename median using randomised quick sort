#include <iostream>
using namespace std;

int partition(int n,int a[], int lb, int ub){
    int index;
    if(lb == 0){
        index = ub;
    }else{
        index = rand()%lb+(ub-lb+1);
    }
    int pivot = a[index];
    int i = lb-1;
    for(int j = lb ; j <= ub-1 ; j++){
        if(a[j] <= pivot){
            i = i + 1;
            swap(a[j],a[i]);
        }
    }swap(a[i+1],a[ub]);
    return i+1;
}

void RandomQuickSort(int n,int a[], int lb, int ub){
    if(lb < ub){
        int index = partition(n,a,lb,ub);
        RandomQuickSort(n,a,lb,index-1);
        RandomQuickSort(n,a,index+1,ub);
    } 
}
void median(int n,int a[]){
    int median;
    if(n%2 == 0){
        median = (a[n/2] + a[n/2 -1])/2;
    }else{
        median = a[(n-1)/2];
    }cout << "Medain = " << median << endl; 
}

int main()
{
    int i,n;
    cout<<"Enter the no of elements in the array: ";
    cin>>n;
    
    int a[n];
    
    cout<<"Enter the array elements: ";
    for(int i=0;i<n;i++)
    {
        cin >> a[i];
    }
    
    RandomQuickSort(n,a,0,n-1);
    median(n,a);
    
    return 0;
} 
    
